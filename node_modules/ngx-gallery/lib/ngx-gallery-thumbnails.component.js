var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input, Output, EventEmitter, HostListener, ElementRef } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { NgxGalleryHelperService } from './ngx-gallery-helper.service';
var NgxGalleryThumbnailsComponent = (function () {
    function NgxGalleryThumbnailsComponent(sanitization, elementRef, helperService) {
        this.sanitization = sanitization;
        this.elementRef = elementRef;
        this.helperService = helperService;
        this.onActiveChange = new EventEmitter();
        this.index = 0;
    }
    NgxGalleryThumbnailsComponent.prototype.ngOnChanges = function (changes) {
        var _this = this;
        if (changes['images']
            && this.selectedIndex >= changes['images'].currentValue.length) {
            this.selectedIndex = 0;
            this.index = 0;
        }
        if (changes['selectedIndex']) {
            this.validateIndex();
        }
        if (changes['swipe']) {
            this.helperService.manageSwipe(this.swipe, this.elementRef, 'thumbnails', function () { return _this.moveRight(); }, function () { return _this.moveLeft(); });
        }
    };
    NgxGalleryThumbnailsComponent.prototype.onMouseEnter = function () {
        this.mouseenter = true;
    };
    NgxGalleryThumbnailsComponent.prototype.onMouseLeave = function () {
        this.mouseenter = false;
    };
    NgxGalleryThumbnailsComponent.prototype.onResize = function () {
        this.setDefaultPosition();
    };
    NgxGalleryThumbnailsComponent.prototype.handleClick = function (event, index) {
        this.selectedIndex = index;
        this.onActiveChange.emit(index);
        event.stopPropagation();
        event.preventDefault();
    };
    NgxGalleryThumbnailsComponent.prototype.moveRight = function () {
        if (this.canMoveRight()) {
            this.index++;
            this.setThumbnailsPosition();
        }
    };
    NgxGalleryThumbnailsComponent.prototype.moveLeft = function () {
        if (this.canMoveLeft()) {
            this.index--;
            this.setThumbnailsPosition();
        }
    };
    NgxGalleryThumbnailsComponent.prototype.canMoveRight = function () {
        return this.index + this.columns < this.getMaxIndex() ? true : false;
    };
    NgxGalleryThumbnailsComponent.prototype.canMoveLeft = function () {
        return this.index !== 0 ? true : false;
    };
    NgxGalleryThumbnailsComponent.prototype.getThumbnailLeft = function (index) {
        var calculatedIndex = Math.floor(index / this.rows);
        return this.getThumbnailPosition(calculatedIndex, this.columns);
    };
    NgxGalleryThumbnailsComponent.prototype.getThumbnailTop = function (index) {
        var calculatedIndex = index % this.rows;
        return this.getThumbnailPosition(calculatedIndex, this.rows);
    };
    NgxGalleryThumbnailsComponent.prototype.getThumbnailWidth = function () {
        return this.getThumbnailDimension(this.columns);
    };
    NgxGalleryThumbnailsComponent.prototype.getThumbnailHeight = function () {
        return this.getThumbnailDimension(this.rows);
    };
    NgxGalleryThumbnailsComponent.prototype.setThumbnailsPosition = function () {
        this.thumbnailsLeft = 'calc(-' + ((100 / this.columns) * this.index)
            + '% - ' + ((this.margin - (((this.columns - 1)
            * this.margin) / this.columns)) * this.index) + 'px)';
    };
    NgxGalleryThumbnailsComponent.prototype.setDefaultPosition = function () {
        this.thumbnailsLeft = '0px';
    };
    NgxGalleryThumbnailsComponent.prototype.canShowArrows = function () {
        if (this.arrows && this.images && this.images.length > this.getVisibleCount()
            && (!this.arrowsAutoHide || this.mouseenter)) {
            return true;
        }
        else {
            return false;
        }
    };
    NgxGalleryThumbnailsComponent.prototype.validateIndex = function () {
        var newIndex = Math.floor(this.selectedIndex / this.rows);
        if (newIndex < this.index || newIndex >= this.index + this.columns) {
            var maxIndex = this.getMaxIndex() - this.columns;
            this.index = newIndex > maxIndex ? maxIndex : newIndex;
            this.setThumbnailsPosition();
        }
    };
    NgxGalleryThumbnailsComponent.prototype.getSafeUrl = function (image) {
        return this.sanitization.bypassSecurityTrustStyle('url(' + image + ')');
    };
    NgxGalleryThumbnailsComponent.prototype.getThumbnailPosition = function (index, count) {
        return this.getSafeStyle('calc(' + ((100 / count) * index) + '% + '
            + ((this.margin - (((count - 1) * this.margin) / count)) * index) + 'px)');
    };
    NgxGalleryThumbnailsComponent.prototype.getThumbnailDimension = function (count) {
        if (this.margin !== 0) {
            return this.getSafeStyle('calc(' + (100 / count) + '% - '
                + (((count - 1) * this.margin) / count) + 'px)');
        }
        else {
            return this.getSafeStyle('calc(' + (100 / count) + '% + 1px)');
        }
    };
    NgxGalleryThumbnailsComponent.prototype.getMaxIndex = function () {
        return Math.ceil(this.images.length / this.rows);
    };
    NgxGalleryThumbnailsComponent.prototype.getVisibleCount = function () {
        return this.columns * this.rows;
    };
    NgxGalleryThumbnailsComponent.prototype.getSafeStyle = function (value) {
        return this.sanitization.bypassSecurityTrustStyle(value);
    };
    return NgxGalleryThumbnailsComponent;
}());
__decorate([
    Input(),
    __metadata("design:type", Array)
], NgxGalleryThumbnailsComponent.prototype, "images", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], NgxGalleryThumbnailsComponent.prototype, "columns", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], NgxGalleryThumbnailsComponent.prototype, "rows", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], NgxGalleryThumbnailsComponent.prototype, "arrows", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], NgxGalleryThumbnailsComponent.prototype, "arrowsAutoHide", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], NgxGalleryThumbnailsComponent.prototype, "margin", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], NgxGalleryThumbnailsComponent.prototype, "selectedIndex", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], NgxGalleryThumbnailsComponent.prototype, "clickable", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], NgxGalleryThumbnailsComponent.prototype, "swipe", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], NgxGalleryThumbnailsComponent.prototype, "size", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], NgxGalleryThumbnailsComponent.prototype, "arrowPrevIcon", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], NgxGalleryThumbnailsComponent.prototype, "arrowNextIcon", void 0);
__decorate([
    Output(),
    __metadata("design:type", Object)
], NgxGalleryThumbnailsComponent.prototype, "onActiveChange", void 0);
__decorate([
    HostListener('mouseenter'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], NgxGalleryThumbnailsComponent.prototype, "onMouseEnter", null);
__decorate([
    HostListener('mouseleave'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], NgxGalleryThumbnailsComponent.prototype, "onMouseLeave", null);
__decorate([
    HostListener('window:resize'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], NgxGalleryThumbnailsComponent.prototype, "onResize", null);
NgxGalleryThumbnailsComponent = __decorate([
    Component({
        selector: 'ngx-gallery-thumbnails',
        templateUrl: './ngx-gallery-thumbnails.component.html',
        styleUrls: ['./ngx-gallery-thumbnails.component.scss']
    }),
    __metadata("design:paramtypes", [DomSanitizer, ElementRef,
        NgxGalleryHelperService])
], NgxGalleryThumbnailsComponent);
export { NgxGalleryThumbnailsComponent };
//# sourceMappingURL=ngx-gallery-thumbnails.component.js.map