var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input, Output, EventEmitter, HostListener, ElementRef } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { NgxGalleryHelperService } from './ngx-gallery-helper.service';
var NgxGalleryImageComponent = (function () {
    function NgxGalleryImageComponent(sanitization, elementRef, helperService) {
        this.sanitization = sanitization;
        this.elementRef = elementRef;
        this.helperService = helperService;
        this.onClick = new EventEmitter();
        this.onActiveChange = new EventEmitter();
    }
    NgxGalleryImageComponent.prototype.ngOnInit = function () {
        if (this.arrows && this.arrowsAutoHide) {
            this.arrows = false;
        }
    };
    NgxGalleryImageComponent.prototype.ngOnChanges = function (changes) {
        var _this = this;
        if (changes['images']
            && this.selectedIndex >= changes['images'].currentValue.length) {
            this.selectedIndex = 0;
        }
        if (changes['swipe']) {
            this.helperService.manageSwipe(this.swipe, this.elementRef, 'image', function () { return _this.showNext(); }, function () { return _this.showPrev(); });
        }
    };
    NgxGalleryImageComponent.prototype.onMouseEnter = function () {
        if (this.arrowsAutoHide && !this.arrows) {
            this.arrows = true;
        }
    };
    NgxGalleryImageComponent.prototype.onMouseLeave = function () {
        if (this.arrowsAutoHide && this.arrows) {
            this.arrows = false;
        }
    };
    NgxGalleryImageComponent.prototype.handleClick = function (event, index) {
        if (this.clickable) {
            this.onClick.emit(index);
            event.stopPropagation();
            event.preventDefault();
        }
    };
    NgxGalleryImageComponent.prototype.showNext = function () {
        if (this.canShowNext()) {
            this.selectedIndex++;
            this.onActiveChange.emit(this.selectedIndex);
        }
    };
    NgxGalleryImageComponent.prototype.showPrev = function () {
        if (this.canShowPrev()) {
            this.selectedIndex--;
            this.onActiveChange.emit(this.selectedIndex);
        }
    };
    NgxGalleryImageComponent.prototype.canShowNext = function () {
        if (this.images) {
            return this.selectedIndex < this.images.length - 1 ? true : false;
        }
        else {
            return false;
        }
    };
    NgxGalleryImageComponent.prototype.canShowPrev = function () {
        if (this.images) {
            return this.selectedIndex > 0 ? true : false;
        }
        else {
            return false;
        }
    };
    NgxGalleryImageComponent.prototype.getSafeUrl = function (image) {
        return this.sanitization.bypassSecurityTrustStyle('url(' + image + ')');
    };
    return NgxGalleryImageComponent;
}());
__decorate([
    Input(),
    __metadata("design:type", Array)
], NgxGalleryImageComponent.prototype, "images", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], NgxGalleryImageComponent.prototype, "clickable", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], NgxGalleryImageComponent.prototype, "selectedIndex", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], NgxGalleryImageComponent.prototype, "arrows", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], NgxGalleryImageComponent.prototype, "arrowsAutoHide", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], NgxGalleryImageComponent.prototype, "swipe", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], NgxGalleryImageComponent.prototype, "animation", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], NgxGalleryImageComponent.prototype, "size", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], NgxGalleryImageComponent.prototype, "arrowPrevIcon", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], NgxGalleryImageComponent.prototype, "arrowNextIcon", void 0);
__decorate([
    Output(),
    __metadata("design:type", Object)
], NgxGalleryImageComponent.prototype, "onClick", void 0);
__decorate([
    Output(),
    __metadata("design:type", Object)
], NgxGalleryImageComponent.prototype, "onActiveChange", void 0);
__decorate([
    HostListener('mouseenter'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], NgxGalleryImageComponent.prototype, "onMouseEnter", null);
__decorate([
    HostListener('mouseleave'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], NgxGalleryImageComponent.prototype, "onMouseLeave", null);
NgxGalleryImageComponent = __decorate([
    Component({
        selector: 'ngx-gallery-image',
        templateUrl: './ngx-gallery-image.component.html',
        styleUrls: ['./ngx-gallery-image.component.scss']
    }),
    __metadata("design:paramtypes", [DomSanitizer,
        ElementRef, NgxGalleryHelperService])
], NgxGalleryImageComponent);
export { NgxGalleryImageComponent };
//# sourceMappingURL=ngx-gallery-image.component.js.map