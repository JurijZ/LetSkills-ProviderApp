var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input, Output, EventEmitter, ElementRef, HostListener } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { NgxGalleryHelperService } from './ngx-gallery-helper.service';
var NgxGalleryPreviewComponent = (function () {
    function NgxGalleryPreviewComponent(sanitization, elementRef, helperService) {
        this.sanitization = sanitization;
        this.elementRef = elementRef;
        this.helperService = helperService;
        this.showSpinner = false;
        this.onOpen = new EventEmitter();
        this.onClose = new EventEmitter();
        this.index = 0;
        this.loadedList = [];
        this.isOpen = false;
    }
    NgxGalleryPreviewComponent.prototype.ngOnChanges = function (changes) {
        var _this = this;
        if (changes['swipe']) {
            this.helperService.manageSwipe(this.swipe, this.elementRef, 'preview', function () { return _this.showNext(); }, function () { return _this.showPrev(); });
        }
    };
    NgxGalleryPreviewComponent.prototype.onKeyDown = function (e) {
        if (this.isOpen) {
            if (this.keyboardNavigation) {
                if (this.isKeyboardPrev(e)) {
                    this.showPrev();
                }
                else if (this.isKeyboardNext(e)) {
                    this.showNext();
                }
            }
            if (this.closeOnEsc && this.isKeyboardEsc(e)) {
                this.close();
            }
        }
    };
    NgxGalleryPreviewComponent.prototype.open = function (index) {
        this.onOpen.emit();
        this.index = index;
        this.isOpen = true;
        this.show();
        if (this.forceFullscreen) {
            this.manageFullscreen();
        }
    };
    NgxGalleryPreviewComponent.prototype.close = function () {
        this.isOpen = false;
        this.closeFullscreen();
        this.onClose.emit();
    };
    NgxGalleryPreviewComponent.prototype.loaded = function () {
        this.showSpinner = false;
        this.loadedList.push(this.src);
    };
    NgxGalleryPreviewComponent.prototype.showNext = function () {
        if (this.canShowNext()) {
            this.index++;
            this.show();
        }
    };
    NgxGalleryPreviewComponent.prototype.showPrev = function () {
        if (this.canShowPrev()) {
            this.index--;
            this.show();
        }
    };
    NgxGalleryPreviewComponent.prototype.canShowNext = function () {
        if (this.images) {
            return this.index < this.images.length - 1 ? true : false;
        }
        else {
            return false;
        }
    };
    NgxGalleryPreviewComponent.prototype.canShowPrev = function () {
        if (this.images) {
            return this.index > 0 ? true : false;
        }
        else {
            return false;
        }
    };
    NgxGalleryPreviewComponent.prototype.manageFullscreen = function () {
        if (this.fullscreen || this.forceFullscreen) {
            var doc = document;
            if (!doc.fullscreenElement && !doc.mozFullScreenElement
                && !doc.webkitFullscreenElement && !doc.msFullscreenElement) {
                this.openFullscreen();
            }
            else {
                this.closeFullscreen();
            }
        }
    };
    NgxGalleryPreviewComponent.prototype.getSafeUrl = function (image) {
        return this.sanitization.bypassSecurityTrustUrl(image);
    };
    NgxGalleryPreviewComponent.prototype.isKeyboardNext = function (e) {
        return e.keyCode === 39 ? true : false;
    };
    NgxGalleryPreviewComponent.prototype.isKeyboardPrev = function (e) {
        return e.keyCode === 37 ? true : false;
    };
    NgxGalleryPreviewComponent.prototype.isKeyboardEsc = function (e) {
        return e.keyCode === 27 ? true : false;
    };
    NgxGalleryPreviewComponent.prototype.openFullscreen = function () {
        var element = document.documentElement;
        if (element.requestFullscreen) {
            element.requestFullscreen();
        }
        else if (element.msRequestFullscreen) {
            element.msRequestFullscreen();
        }
        else if (element.mozRequestFullScreen) {
            element.mozRequestFullScreen();
        }
        else if (element.webkitRequestFullscreen) {
            element.webkitRequestFullscreen();
        }
    };
    NgxGalleryPreviewComponent.prototype.closeFullscreen = function () {
        var doc = document;
        if (doc.exitFullscreen) {
            doc.exitFullscreen();
        }
        else if (doc.msExitFullscreen) {
            doc.msExitFullscreen();
        }
        else if (doc.mozCancelFullScreen) {
            doc.mozCancelFullScreen();
        }
        else if (doc.webkitExitFullscreen) {
            doc.webkitExitFullscreen();
        }
    };
    NgxGalleryPreviewComponent.prototype.show = function () {
        this.src = this.images[this.index];
        this.srcIndex = this.index;
        this.description = this.descriptions[this.index];
        if (this.loadedList.indexOf(this.src) === -1) {
            this.showSpinner = true;
        }
    };
    return NgxGalleryPreviewComponent;
}());
__decorate([
    Input(),
    __metadata("design:type", Array)
], NgxGalleryPreviewComponent.prototype, "images", void 0);
__decorate([
    Input(),
    __metadata("design:type", Array)
], NgxGalleryPreviewComponent.prototype, "descriptions", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], NgxGalleryPreviewComponent.prototype, "showDescription", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], NgxGalleryPreviewComponent.prototype, "swipe", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], NgxGalleryPreviewComponent.prototype, "fullscreen", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], NgxGalleryPreviewComponent.prototype, "forceFullscreen", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], NgxGalleryPreviewComponent.prototype, "closeOnClick", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], NgxGalleryPreviewComponent.prototype, "closeOnEsc", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], NgxGalleryPreviewComponent.prototype, "keyboardNavigation", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], NgxGalleryPreviewComponent.prototype, "arrowPrevIcon", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], NgxGalleryPreviewComponent.prototype, "arrowNextIcon", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], NgxGalleryPreviewComponent.prototype, "closeIcon", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], NgxGalleryPreviewComponent.prototype, "fullscreenIcon", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], NgxGalleryPreviewComponent.prototype, "spinnerIcon", void 0);
__decorate([
    Output(),
    __metadata("design:type", Object)
], NgxGalleryPreviewComponent.prototype, "onOpen", void 0);
__decorate([
    Output(),
    __metadata("design:type", Object)
], NgxGalleryPreviewComponent.prototype, "onClose", void 0);
__decorate([
    HostListener('window:keydown', ['$event']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [KeyboardEvent]),
    __metadata("design:returntype", void 0)
], NgxGalleryPreviewComponent.prototype, "onKeyDown", null);
NgxGalleryPreviewComponent = __decorate([
    Component({
        selector: 'ngx-gallery-preview',
        templateUrl: './ngx-gallery-preview.component.html',
        styleUrls: ['./ngx-gallery-preview.component.scss']
    }),
    __metadata("design:paramtypes", [DomSanitizer,
        ElementRef, NgxGalleryHelperService])
], NgxGalleryPreviewComponent);
export { NgxGalleryPreviewComponent };
//# sourceMappingURL=ngx-gallery-preview.component.js.map